@model IEnumerable<AgriEnergyConnect2.Models.Product>

@{
    ViewData["Title"] = (string)ViewData["FarmerName"] ?? "My Products";
}

<div class="container mt-5">
    <h1 class="text-primary mb-4">@ViewData["Title"]</h1>
    <hr class="my-4" />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info" role="alert">
            @TempData["InfoMessage"]
        </div>
    }

    @* Only show "Add New Product" button if it's the current farmer viewing their own products *@
    @if (User.IsInRole("Farmer") && ViewData["FarmerName"] == null)
    {
        <p class="mt-3">
            <a asp-action="AddProduct" class="btn btn-success">Add New Product</a>
        </p>
    }


    @if (Model != null && Model.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <table class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Category)</th>
                            <th>@Html.DisplayNameFor(model => model.Description)</th>
                            <th>@Html.DisplayNameFor(model => model.ProductionDate)</th>
                            <th>@Html.DisplayNameFor(model => model.AddedDate)</th>
                            <th>@Html.DisplayNameFor(model => model.Farmer)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => product.Name)</td>
                                <td>@Html.DisplayFor(modelItem => product.Category)</td>
                                <td>@Html.DisplayFor(modelItem => product.Description)</td>
                                <td>@product.ProductionDate.ToString("yyyy-MM-dd")</td>
                                <td>@product.AddedDate.ToString("yyyy-MM-dd")</td>
                                <td>@product.Farmer?.FirstName @product.Farmer?.LastName</td>
                                <td>
                                    @* Only show Edit/Delete for the current farmer viewing their own products *@
                                    @if (User.IsInRole("Farmer") && ViewData["FarmerName"] == null)
                                    {
                                        <a asp-action="EditProduct" asp-route-id="@product.ProductID" class="btn btn-warning btn-sm">Edit</a>
                                        <a asp-action="DeleteProduct" asp-route-id="@product.ProductID" class="btn btn-danger btn-sm">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info mt-4" role="alert">
            No products available. Please add some products.
        </div>
    }

    @if (ViewData["FarmerName"] != null) // If viewing another farmer's products, provide a back button
    {
        <div class="mt-3">
            <a asp-action="ViewFarmers" class="btn btn-outline-secondary">Back to Farmer List</a>
        </div>
    }
    else
    {
        <div class="mt-3">
            <a asp-action="Dashboard" class="btn btn-outline-secondary">Back to Dashboard</a>
        </div>
    }
</div>